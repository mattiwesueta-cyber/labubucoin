// üéÆ LabubuCoin - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É—Ä–æ–≤–Ω–µ–π
console.log('üìã Starting to load levels-config.js...');

class LevelsConfig {
    constructor() {
        // –í–ê–ñ–ù–û: —Å–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ranks, –ø–æ—Ç–æ–º levels
        // —Ç–∞–∫ –∫–∞–∫ generateLevelsConfig() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç getRankByCoins()
        this.ranks = this.generateRanksConfig();
        this.levels = this.generateLevelsConfig();
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Ä–æ–≤–Ω–µ–π
    generateLevelsConfig() {
        const levels = [];

        // –î–µ–ª–∞–µ—Ç —É—Ä–æ–≤–Ω–∏ –∂—ë—Å—Ç–∫–æ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∫ –ø–æ—Ä–æ–≥–∞–º —Ä–∞–Ω–≥–æ–≤ (coins)
        // –£—Ä–æ–≤–µ–Ω—å 1 ‚Üí requiredCoins = 0; –£—Ä–æ–≤–µ–Ω—å 2 ‚Üí 500; –¥–∞–ª–µ–µ –ø–æ —Å–ø–∏—Å–∫—É —Ä–∞–Ω–≥–æ–≤
        for (let i = 0; i < this.ranks.length; i++) {
            const currentRank = this.ranks[i];
            const nextRank = this.ranks[i + 1] || null;
            const totalXpRequired = currentRank.requiredCoins; // XP (coins) –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è
            const xpRequired = nextRank
                ? nextRank.requiredCoins - currentRank.requiredCoins // –°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
                : 0; // –ø–æ—Å–ª–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å

            levels.push({
                level: i + 1,
                xpRequired: xpRequired,
                totalXpRequired: totalXpRequired,
                rank: currentRank.name,
                rankColor: currentRank.color,
                rankIcon: currentRank.icon,
                rankId: currentRank.id,
                rewards: this.getLevelRewards(i + 1, totalXpRequired),
                title: this.getLevelTitle(i + 1, currentRank)
            });
        }

        return levels;
    }

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–Ω–≥–æ–≤ - –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞
    generateRanksConfig() {
        return [
            // Bronze —Ä–∞–Ω–≥–∏
            {
                id: "bronze_1",
                name: "Bronze 1", 
                requiredCoins: 0,
                reward: 100,
                color: "#CD7F32",
                gradient: "linear-gradient(135deg, #CD7F32 0%, #A0522D 100%)",
                icon: "ü•â",
                description: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ –≤ –º–∏—Ä–µ LabubuCoin"
            },
            {
                id: "bronze_2",
                name: "Bronze 2",
                requiredCoins: 500,
                reward: 200, 
                color: "#CD7F32",
                gradient: "linear-gradient(135deg, #CD7F32 0%, #A0522D 100%)",
                icon: "ü•â",
                description: "–ò–∑—É—á–∞–µ—à—å –æ—Å–Ω–æ–≤—ã –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è"
            },
            {
                id: "bronze_3", 
                name: "Bronze 3",
                requiredCoins: 1000,
                reward: 300,
                color: "#CD7F32",
                gradient: "linear-gradient(135deg, #CD7F32 0%, #A0522D 100%)",
                icon: "ü•â",
                description: "–ú–∞—Å—Ç–µ—Ä –±—Ä–æ–Ω–∑–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è"
            },
            
            // Silver —Ä–∞–Ω–≥–∏
            {
                id: "silver_1",
                name: "Silver 1",
                requiredCoins: 2000,
                reward: 400,
                color: "#C0C0C0", 
                gradient: "linear-gradient(135deg, #C0C0C0 0%, #808080 100%)",
                icon: "ü•à",
                description: "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–µ—Ä–µ–±—Ä—è–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"
            },
            {
                id: "silver_2",
                name: "Silver 2", 
                requiredCoins: 3500,
                reward: 500,
                color: "#C0C0C0",
                gradient: "linear-gradient(135deg, #C0C0C0 0%, #808080 100%)",
                icon: "ü•à", 
                description: "–û–ø—ã—Ç–Ω—ã–π —Å–µ—Ä–µ–±—Ä—è–Ω—ã–π –∏–≥—Ä–æ–∫"
            },
            {
                id: "silver_3",
                name: "Silver 3",
                requiredCoins: 5000,
                reward: 600,
                color: "#C0C0C0",
                gradient: "linear-gradient(135deg, #C0C0C0 0%, #808080 100%)",
                icon: "ü•à",
                description: "–≠–ª–∏—Ç–∞ —Å–µ—Ä–µ–±—Ä—è–Ω–æ–≥–æ —Ä–∞–Ω–≥–∞"
            },
            
            // Gold —Ä–∞–Ω–≥–∏
            {
                id: "gold_1",
                name: "Gold 1",
                requiredCoins: 7500,
                reward: 800,
                color: "#FFD700",
                gradient: "linear-gradient(135deg, #FFD700 0%, #FFA500 100%)",
                icon: "ü•á",
                description: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–æ–ª–æ—Ç—É—é –ª–∏–≥—É"
            },
            {
                id: "gold_2",
                name: "Gold 2", 
                requiredCoins: 10000,
                reward: 1000,
                color: "#FFD700",
                gradient: "linear-gradient(135deg, #FFD700 0%, #FFA500 100%)",
                icon: "ü•á",
                description: "–ó–æ–ª–æ—Ç–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä"
            },
            {
                id: "gold_3",
                name: "Gold 3",
                requiredCoins: 15000,
                reward: 1200,
                color: "#FFD700", 
                gradient: "linear-gradient(135deg, #FFD700 0%, #FFA500 100%)",
                icon: "ü•á",
                description: "–ú–∞—Å—Ç–µ—Ä –∑–æ–ª–æ—Ç—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π"
            },
            {
                id: "gold_4",
                name: "Gold 4",
                requiredCoins: 20000,
                reward: 1500,
                color: "#FFD700",
                gradient: "linear-gradient(135deg, #FFD700 0%, #FFA500 100%)",
                icon: "ü•á",
                description: "–ö–æ—Ä–æ–ª—å –∑–æ–ª–æ—Ç–æ–≥–æ —Ä–∞–Ω–≥–∞"
            },
            
            // Platinum —Ä–∞–Ω–≥–∏
            {
                id: "platinum_1",
                name: "Platinum 1",
                requiredCoins: 30000,
                reward: 2000,
                color: "#E5E4E2",
                gradient: "linear-gradient(135deg, #E5E4E2 0%, #BCC6CC 100%)",
                icon: "üíé",
                description: "–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç"
            },
            {
                id: "platinum_2",
                name: "Platinum 2",
                requiredCoins: 40000,
                reward: 2500,
                color: "#E5E4E2",
                gradient: "linear-gradient(135deg, #E5E4E2 0%, #BCC6CC 100%)",
                icon: "üíé",
                description: "–≠–ª–∏—Ç–Ω—ã–π –ø–ª–∞—Ç–∏–Ω–æ–≤—ã–π –∏–≥—Ä–æ–∫"
            },
            {
                id: "platinum_3",
                name: "Platinum 3",
                requiredCoins: 50000,
                reward: 3000,
                color: "#E5E4E2",
                gradient: "linear-gradient(135deg, #E5E4E2 0%, #BCC6CC 100%)",
                icon: "üíé",
                description: "–ú–∞—Å—Ç–µ—Ä –ø–ª–∞—Ç–∏–Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è"
            },
            
            // Diamond —Ä–∞–Ω–≥–∏
            {
                id: "diamond_1",
                name: "Diamond 1",
                requiredCoins: 65000,
                reward: 4000,
                color: "#B9F2FF",
                gradient: "linear-gradient(135deg, #B9F2FF 0%, #87CEEB 100%)",
                icon: "üí†",
                description: "–ê–ª–º–∞–∑–Ω—ã–π —Å—Ç–∞—Ç—É—Å - —Ä–µ–¥–∫–æ—Å—Ç—å"
            },
            {
                id: "diamond_2",
                name: "Diamond 2",
                requiredCoins: 80000,
                reward: 5000,
                color: "#B9F2FF",
                gradient: "linear-gradient(135deg, #B9F2FF 0%, #87CEEB 100%)",
                icon: "üí†",
                description: "–≠–ª–∏—Ç–Ω—ã–π –∞–ª–º–∞–∑–Ω—ã–π –º–∞–≥–Ω–∞—Ç"
            },
            {
                id: "diamond_3",
                name: "Diamond 3",
                requiredCoins: 100000,
                reward: 6000,
                color: "#B9F2FF",
                gradient: "linear-gradient(135deg, #B9F2FF 0%, #87CEEB 100%)",
                icon: "üí†",
                description: "–ö–æ—Ä–æ–ª—å –∞–ª–º–∞–∑–Ω–æ–≥–æ —Ä–∞–Ω–≥–∞"
            },
            
            // Master —Ä–∞–Ω–≥–∏
            {
                id: "master_1",
                name: "Master 1",
                requiredCoins: 125000,
                reward: 8000,
                color: "#9932CC",
                gradient: "linear-gradient(135deg, #9932CC 0%, #4B0082 100%)",
                icon: "üëë",
                description: "–ú–∞—Å—Ç–µ—Ä—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç"
            },
            {
                id: "master_2",
                name: "Master 2",
                requiredCoins: 150000,
                reward: 10000,
                color: "#9932CC",
                gradient: "linear-gradient(135deg, #9932CC 0%, #4B0082 100%)",
                icon: "üëë",
                description: "–í–µ–ª–∏—á–∞–π—à–∏–π –º–∞—Å—Ç–µ—Ä LabubuCoin"
            },
            
            // Grandmaster —Ä–∞–Ω–≥
            {
                id: "grandmaster",
                name: "Grandmaster",
                requiredCoins: 200000,
                reward: 15000,
                color: "#FF6B35",
                gradient: "linear-gradient(135deg, #FF6B35 0%, #F7931E 100%)",
                icon: "üî•",
                description: "–ì—Ä–æ—Å—Å–º–µ–π—Å—Ç–µ—Ä - –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å"
            },
            
            // Legend —Ä–∞–Ω–≥–∏
            {
                id: "legend",
                name: "Legend",
                requiredCoins: 300000,
                reward: 20000,
                color: "#FF1493",
                gradient: "linear-gradient(135deg, #FF1493 0%, #DC143C 100%)",
                icon: "‚≠ê",
                description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å - –º–µ—á—Ç–∞ –º–Ω–æ–≥–∏—Ö"
            },
            {
                id: "legend_elite",
                name: "Legend Elite",
                requiredCoins: 500000,
                reward: 30000,
                color: "#FF0080",
                gradient: "linear-gradient(135deg, #FF0080 0%, #8B008B 100%)",
                icon: "üåü",
                description: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ª–µ–≥–µ–Ω–¥–∞ LabubuCoin"
            }
        ];
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–Ω–≥–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–æ–Ω–µ—Ç
    getRankByCoins(coins) {
        // –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ä–∞–Ω–≥ –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ
        for (let i = this.ranks.length - 1; i >= 0; i--) {
            if (coins >= this.ranks[i].requiredCoins) {
                return this.ranks[i];
            }
        }
        // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ä–∞–Ω–≥–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π (Bronze 1)
        return this.ranks[0];
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–Ω–≥–∞ –ø–æ —É—Ä–æ–≤–Ω—é –∏–≥—Ä–æ–∫–∞
    getRankByLevel(level) {
        // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω—è
        const levelData = this.levels.find(l => l.level === level);
        if (!levelData) {
            return this.ranks[0]; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º Bronze 1 –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–Ω–≥ –ø–æ –æ–±—â–µ–º—É XP –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è
        return this.getRankByCoins(levelData.totalXpRequired);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–Ω–≥–∞
    getNextRank(coins) {
        const currentRank = this.getRankByCoins(coins);
        const currentIndex = this.ranks.findIndex(rank => rank.id === currentRank.id);
        
        if (currentIndex < this.ranks.length - 1) {
            return this.ranks[currentIndex + 1];
        }
        
        return null; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–Ω–≥–∞
    getRankProgress(coins) {
        const currentRank = this.getRankByCoins(coins);
        const nextRank = this.getNextRank(coins);
        
        if (!nextRank) {
            return 100; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç
        }
        
        const progressCoins = coins - currentRank.requiredCoins;
        const totalNeeded = nextRank.requiredCoins - currentRank.requiredCoins;
        
        return Math.max(0, Math.min(100, (progressCoins / totalNeeded) * 100));
    }

    // –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
    getLevelRewards(level, totalXpRequired, allLevels = null) {
        const rewards = [];
        const currentRank = this.getRankByCoins(totalXpRequired);
        
        // –ë–∞–∑–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∫–∞–∂–¥—ã–µ 5 —É—Ä–æ–≤–Ω–µ–π
        if (level % 5 === 0) {
            rewards.push({
                type: 'coins',
                amount: level * 100,
                description: `–ë–æ–Ω—É—Å ${level * 100} –º–æ–Ω–µ—Ç`
            });
        }
        
        // –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞–Ω–≥–∞
        if (level > 1 && allLevels) {
            const previousTotalXP = allLevels[level - 2]?.totalXpRequired || 0;
            const previousRank = this.getRankByCoins(previousTotalXP);
            
            // –ï—Å–ª–∏ —Ä–∞–Ω–≥ –∏–∑–º–µ–Ω–∏–ª—Å—è, –¥–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –Ω–æ–≤—ã–π —Ä–∞–Ω–≥
            if (currentRank.id !== previousRank.id) {
                rewards.push({
                    type: 'rank',
                    amount: currentRank.reward,
                    description: `–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–Ω–≥–∞ ${currentRank.name}!`,
                    rankName: currentRank.name,
                    rankIcon: currentRank.icon
                });
            }
        }
        
        // –û—Å–æ–±—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –∫—Ä—É–ø–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if (level === 100) {
            rewards.push({
                type: 'special',
                description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
                title: '–ú–∞—Å—Ç–µ—Ä 100 —É—Ä–æ–≤–Ω—è'
            });
        }
        
        return rewards;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏—Ç—É–ª–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è
    getLevelTitle(level, rank) {
        const titles = {
            'bronze_1': '–ù–æ–≤–∏—á–æ–∫',
            'bronze_2': '–£—á–µ–Ω–∏–∫', 
            'bronze_3': '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
            'silver_1': '–ò—Å–∫–∞—Ç–µ–ª—å',
            'silver_2': '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä',
            'silver_3': '–≠–Ω—Ç—É–∑–∏–∞—Å—Ç',
            'gold_1': '–ó–Ω–∞—Ç–æ–∫',
            'gold_2': '–ú–∞—Å—Ç–µ—Ä–æ–∫',
            'gold_3': '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç',
            'gold_4': '–≠–∫—Å–ø–µ—Ä—Ç',
            'platinum_1': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
            'platinum_2': '–í–∏—Ä—Ç—É–æ–∑',
            'platinum_3': '–ú–∞—Å—Ç–µ—Ä',
            'diamond_1': '–ì—É—Ä—É',
            'diamond_2': '–ß–µ–º–ø–∏–æ–Ω',
            'diamond_3': '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å',
            'master_1': '–õ–∏–¥–µ—Ä',
            'master_2': '–≠–ª–∏—Ç–∞',
            'grandmaster': '–ó–≤–µ–∑–¥–∞',
            'legend': '–ì–µ—Ä–æ–π',
            'legend_elite': '–õ–µ–≥–µ–Ω–¥–∞'
        };
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–∏—Ç—É–ª –¥–ª—è —Ä–∞–Ω–≥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (titles[rank.id]) {
            return titles[rank.id];
        }
        
        // –ò–Ω–∞—á–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–∏—Ç—É–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Ä–æ–≤–Ω—è
        const levelTitles = [
            '–ù–æ–≤–∏—á–æ–∫', '–£—á–µ–Ω–∏–∫', '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', '–ò—Å–∫–∞—Ç–µ–ª—å', '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä',
            '–≠–Ω—Ç—É–∑–∏–∞—Å—Ç', '–ó–Ω–∞—Ç–æ–∫', '–ú–∞—Å—Ç–µ—Ä–æ–∫', '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', '–≠–∫—Å–ø–µ—Ä—Ç',
            '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª', '–í–∏—Ä—Ç—É–æ–∑', '–ú–∞—Å—Ç–µ—Ä', '–ì—É—Ä—É', '–ß–µ–º–ø–∏–æ–Ω',
            '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å', '–õ–∏–¥–µ—Ä', '–≠–ª–∏—Ç–∞', '–ó–≤–µ–∑–¥–∞', '–ì–µ—Ä–æ–π'
        ];
        
        const titleIndex = Math.min(level - 1, levelTitles.length - 1);
        return levelTitles[titleIndex] || '–ú–∞—Å—Ç–µ—Ä';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Ä–æ–≤–Ω–µ
    getLevelInfo(level) {
        if (level < 1 || level > this.levels.length) {
            return null;
        }
        
        return this.levels[level - 1];
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –ø–æ –æ–±—â–µ–º—É XP
    getLevelByTotalXP(totalXP) {
        for (let i = this.levels.length - 1; i >= 0; i--) {
            if (totalXP >= this.levels[i].totalXpRequired) {
                return i + 1;
            }
        }
        return 1; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    getLevelProgress(totalXP) {
        const currentLevel = this.getLevelByTotalXP(totalXP);
        
        if (currentLevel >= this.levels.length) {
            return 100; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç
        }
        
        const currentLevelInfo = this.levels[currentLevel - 1];
        const nextLevelInfo = this.levels[currentLevel];
        
        if (!nextLevelInfo) {
            return 100;
        }
        
        const xpInCurrentLevel = totalXP - currentLevelInfo.totalXpRequired;
        const xpNeededForNextLevel = nextLevelInfo.totalXpRequired - currentLevelInfo.totalXpRequired;
        
        return Math.max(0, Math.min(100, (xpInCurrentLevel / xpNeededForNextLevel) * 100));
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    exportConfig() {
        return {
            levels: this.levels,
            ranks: this.ranks,
            summary: {
                totalLevels: this.levels.length,
                maxXP: this.levels[this.levels.length - 1]?.totalXpRequired || 0,
                ranksCount: this.ranks.length,
                maxRankRequirement: this.ranks[this.ranks.length - 1]?.requiredCoins || 0
            }
        };
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('üîß Creating LevelsConfig instance...');
try {
    window.LevelsConfig = new LevelsConfig();
    console.log('‚úÖ LevelsConfig instance created successfully!');
    console.log('üéÆ Levels Config loaded!');
    console.log('üìä Total levels:', window.LevelsConfig.levels.length);
    console.log('üèÜ Total ranks:', window.LevelsConfig.ranks.length);
    console.log('üíé Max XP required:', window.LevelsConfig.levels[window.LevelsConfig.levels.length - 1]?.totalXpRequired);
    console.log('üëë Highest rank:', window.LevelsConfig.ranks[window.LevelsConfig.ranks.length - 1]?.name);
    console.log('üí∞ Max coins for highest rank:', window.LevelsConfig.ranks[window.LevelsConfig.ranks.length - 1]?.requiredCoins);
} catch (error) {
    console.error('‚ùå Error creating LevelsConfig instance:', error);
    console.error('üìç Stack trace:', error.stack);
} 